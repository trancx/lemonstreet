// 定义项目 API 的 proto 文件 可以同时描述 gRPC 和 HTTP API
// protobuf 文件参考:
//  - https://developers.google.com/protocol-buffers/
syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

// package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..
package comment.service;

// NOTE: 最后请删除这些无用的注释 (゜-゜)つロ 

option go_package = "cmtapi";
option (gogoproto.goproto_getters_all) = false;

message Comment {
    int64 cid = 1 [(gogoproto.jsontag) = "cid"];;
    int64 aid = 2 [(gogoproto.jsontag) = "aid"];;
    int64 uid = 3 [(gogoproto.jsontag) = "uid"];;
    int64 date = 4 [(gogoproto.jsontag) = "date"];;
    string content = 5 [(gogoproto.jsontag) = "content"];;
}

// aid or mid or uid
message IDReq {
    int64 id = 1;
}

message CommentsReply {
    repeated Comment comments = 1;
}

service Comments {
    rpc CommentsOfAID(IDReq) returns (CommentsReply);
    rpc CommentSOfUID(IDReq) returns (CommentsReply);
}
