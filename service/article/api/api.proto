// 定义项目 API 的 proto 文件 可以同时描述 gRPC 和 HTTP API
// protobuf 文件参考:
//  - https://developers.google.com/protocol-buffers/
syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

// package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..
package article.service;

// NOTE: 最后请删除这些无用的注释 (゜-゜)つロ 

option go_package = "artapi";
option (gogoproto.goproto_getters_all) = false;

message ArticleBaseInfo {
    int64  aid = 1 [(gogoproto.jsontag) = "aid"];
    int64  uid = 2 [(gogoproto.jsontag) = "uid"];
    string author = 3 [(gogoproto.jsontag) = "author"];
    string title = 4 [(gogoproto.jsontag) = "title"];
    string desc = 5 [(gogoproto.jsontag) = "desc"];
}

// author or title, depends on the API
message NameReq {
    string name = 1;
}

// uid or aid, depends on the API
message IDReq {
    int64 id = 1;
}

message ArticleBaseInfoReply {
    ArticleBaseInfo info = 1;
}

message ArticleBaseInfosReply {
    repeated ArticleBaseInfo infos = 1;
}

service Article {
    // 获取用户的所有文章
    rpc SearchArticlesByUID (IDReq) returns (ArticleBaseInfosReply); // multi replys
    // 搜索模块 通过 title 来搜索文章
    rpc SearchArticlesByTitle (NameReq) returns (ArticleBaseInfosReply);
}
